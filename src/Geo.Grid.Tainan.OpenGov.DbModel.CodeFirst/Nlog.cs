// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Geo.Grid.Tainan.OpenGov.DbModel.CodeFirst
{

    [Table("Nlog", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public class Nlog
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_dbo.Log", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"Application", Order = 2, TypeName = "nvarchar")]
        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Application")]
        public string Application { get; set; }

        [Column(@"Logged", Order = 3, TypeName = "datetime")]
        [Required]
        [Display(Name = "Logged")]
        public System.DateTime Logged { get; set; }

        [Column(@"Level", Order = 4, TypeName = "nvarchar")]
        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Level")]
        public string Level { get; set; }

        [Column(@"Message", Order = 5, TypeName = "nvarchar(max)")]
        [Required]
        [Display(Name = "Message")]
        public string Message { get; set; }

        [Column(@"UserName", Order = 6, TypeName = "nvarchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [DataType(DataType.Text)]
        [Display(Name = "User name")]
        public string UserName { get; set; }

        [Column(@"ServerName", Order = 7, TypeName = "nvarchar(max)")]
        [Display(Name = "Server name")]
        public string ServerName { get; set; }

        [Column(@"Port", Order = 8, TypeName = "nvarchar(max)")]
        [Display(Name = "Port")]
        public string Port { get; set; }

        [Column(@"Url", Order = 9, TypeName = "nvarchar(max)")]
        [Url]
        [Display(Name = "Url")]
        public string Url { get; set; }

        [Column(@"Https", Order = 10, TypeName = "bit")]
        [Display(Name = "Https")]
        public bool? Https { get; set; }

        [Column(@"ServerAddress", Order = 11, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Server address")]
        public string ServerAddress { get; set; }

        [Column(@"RemoteAddress", Order = 12, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Remote address")]
        public string RemoteAddress { get; set; }

        [Column(@"Logger", Order = 13, TypeName = "nvarchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Logger")]
        public string Logger { get; set; }

        [Column(@"Callsite", Order = 14, TypeName = "nvarchar(max)")]
        [Display(Name = "Callsite")]
        public string Callsite { get; set; }

        [Column(@"Exception", Order = 15, TypeName = "nvarchar(max)")]
        [Display(Name = "Exception")]
        public string Exception { get; set; }
    }

}
// </auto-generated>
