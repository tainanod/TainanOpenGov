// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Geo.Grid.Tainan.OpenGov.DbModel.CodeFirst
{

    [Table("DISCUSS", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public class Discuss
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"DISCUSS_ID", Order = 1, TypeName = "uniqueidentifier")]
        [Index(@"PK_dbo.DISCUSS", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Discuss ID")]
        public System.Guid DiscussId { get; set; }

        [Column(@"FORUM_ID", Order = 2, TypeName = "uniqueidentifier")]
        [Index(@"IX_FORUM_ID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Forum ID")]
        public System.Guid ForumId { get; set; }

        [Column(@"USER_ID", Order = 3, TypeName = "nvarchar")]
        [Index(@"IX_USER_ID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "User ID")]
        public string UserId { get; set; }

        [Column(@"UPPER_ID", Order = 4, TypeName = "uniqueidentifier")]
        [Display(Name = "Upper ID")]
        public System.Guid? UpperId { get; set; }

        [Column(@"MESSAGE", Order = 5, TypeName = "nvarchar")]
        [Required]
        [MaxLength(4000)]
        [StringLength(4000)]
        [Display(Name = "Message")]
        public string Message { get; set; }

        [Column(@"IS_ENABLED", Order = 6, TypeName = "bit")]
        [Required]
        [Display(Name = "Is enabled")]
        public bool IsEnabled { get; set; }

        [Column(@"CREATED_BY", Order = 7, TypeName = "nvarchar")]
        [Required]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Created by")]
        public string CreatedBy { get; set; }

        [Column(@"CREATED_DATE", Order = 8, TypeName = "datetime")]
        [Required]
        [Display(Name = "Created date")]
        public System.DateTime CreatedDate { get; set; }

        [Column(@"UPDATE_BY", Order = 9, TypeName = "nvarchar")]
        [Required]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Update by")]
        public string UpdateBy { get; set; }

        [Column(@"UPDATE_DATE", Order = 10, TypeName = "datetime")]
        [Required]
        [Display(Name = "Update date")]
        public System.DateTime UpdateDate { get; set; }

        ///<summary>
        /// 置頂
        ///</summary>
        [Column(@"IS_TOP", Order = 11, TypeName = "bit")]
        [Required]
        [Display(Name = "Is top")]
        public bool IsTop { get; set; }

        public System.Collections.Generic.ICollection<AspNetUser> AspNetUsers { get; set; }
        public System.Collections.Generic.ICollection<Tag> Tags { get; set; }


        [ForeignKey("ForumId")] public Forum Forum { get; set; }

        [ForeignKey("UserId")] public AspNetUser AspNetUser { get; set; }

        public Discuss()
        {
            DiscussId = System.Guid.NewGuid();
            IsTop = false;
            Tags = new System.Collections.Generic.List<Tag>();
            AspNetUsers = new System.Collections.Generic.List<AspNetUser>();
        }
    }

}
// </auto-generated>
