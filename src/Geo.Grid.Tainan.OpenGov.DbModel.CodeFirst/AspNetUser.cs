// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Geo.Grid.Tainan.OpenGov.DbModel.CodeFirst
{

    [Table("AspNetUsers", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public class AspNetUser
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Id", Order = 1, TypeName = "nvarchar")]
        [Index(@"PK_dbo.AspNetUsers", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [MaxLength(128)]
        [StringLength(128)]
        [Key]
        [Display(Name = "Id")]
        public string Id { get; set; }

        [Column(@"Email", Order = 2, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; }

        [Column(@"EmailConfirmed", Order = 3, TypeName = "bit")]
        [Required]
        [Display(Name = "Email confirmed")]
        public bool EmailConfirmed { get; set; }

        [Column(@"PasswordHash", Order = 4, TypeName = "nvarchar(max)")]
        [Display(Name = "Password hash")]
        public string PasswordHash { get; set; }

        [Column(@"SecurityStamp", Order = 5, TypeName = "nvarchar(max)")]
        [Display(Name = "Security stamp")]
        public string SecurityStamp { get; set; }

        [Column(@"PhoneNumber", Order = 6, TypeName = "nvarchar(max)")]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; }

        [Column(@"PhoneNumberConfirmed", Order = 7, TypeName = "bit")]
        [Required]
        [Display(Name = "Phone number confirmed")]
        public bool PhoneNumberConfirmed { get; set; }

        [Column(@"TwoFactorEnabled", Order = 8, TypeName = "bit")]
        [Required]
        [Display(Name = "Two factor enabled")]
        public bool TwoFactorEnabled { get; set; }

        [Column(@"LockoutEndDateUtc", Order = 9, TypeName = "datetime")]
        [Display(Name = "Lockout end date utc")]
        public System.DateTime? LockoutEndDateUtc { get; set; }

        [Column(@"LockoutEnabled", Order = 10, TypeName = "bit")]
        [Required]
        [Display(Name = "Lockout enabled")]
        public bool LockoutEnabled { get; set; }

        [Column(@"AccessFailedCount", Order = 11, TypeName = "int")]
        [Required]
        [Display(Name = "Access failed count")]
        public int AccessFailedCount { get; set; }

        [Column(@"NickName", Order = 12, TypeName = "nvarchar(max)")]
        [Display(Name = "Nick name")]
        public string NickName { get; set; }

        [Column(@"UserName", Order = 13, TypeName = "nvarchar")]
        [Required]
        [MaxLength(256)]
        [StringLength(256)]
        [DataType(DataType.Text)]
        [Display(Name = "User name")]
        public string UserName { get; set; }

        [Column(@"ImageUrl", Order = 14, TypeName = "nvarchar(max)")]
        [Display(Name = "Image url")]
        public string ImageUrl { get; set; }

        [Column(@"DataSetUnitId", Order = 15, TypeName = "uniqueidentifier")]
        [Display(Name = "Data set unit ID")]
        public System.Guid? DataSetUnitId { get; set; }

        public System.Collections.Generic.ICollection<AspNetRole> AspNetRoles { get; set; }
        public System.Collections.Generic.ICollection<AspNetUserClaim> AspNetUserClaims { get; set; }
        public System.Collections.Generic.ICollection<AspNetUserLogin> AspNetUserLogins { get; set; }
        public System.Collections.Generic.ICollection<Discuss> Discusses_DiscussId { get; set; }
        public System.Collections.Generic.ICollection<Discuss> Discusses_UserId { get; set; }
        public System.Collections.Generic.ICollection<ParticipationDiscuss> ParticipationDiscusses_DiscussId { get; set; }
        public System.Collections.Generic.ICollection<ParticipationDiscuss> ParticipationDiscusses_UserId { get; set; }

        public AspNetUser()
        {
            AspNetUserClaims = new System.Collections.Generic.List<AspNetUserClaim>();
            AspNetUserLogins = new System.Collections.Generic.List<AspNetUserLogin>();
            Discusses_UserId = new System.Collections.Generic.List<Discuss>();
            ParticipationDiscusses_UserId = new System.Collections.Generic.List<ParticipationDiscuss>();
            ParticipationDiscusses_DiscussId = new System.Collections.Generic.List<ParticipationDiscuss>();
            Discusses_DiscussId = new System.Collections.Generic.List<Discuss>();
            AspNetRoles = new System.Collections.Generic.List<AspNetRole>();
        }
    }

}
// </auto-generated>
