// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Geo.Grid.Tainan.OpenGov.DbModel.CodeFirst
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public class OpenGovContext : System.Data.Entity.DbContext, IOpenGovContext
    {
        public System.Data.Entity.DbSet<Activity> Activities { get; set; }
        public System.Data.Entity.DbSet<Allowance> Allowances { get; set; }
        public System.Data.Entity.DbSet<AllowanceSource> AllowanceSources { get; set; }
        public System.Data.Entity.DbSet<AnonymousClick> AnonymousClicks { get; set; }
        public System.Data.Entity.DbSet<AspNetRole> AspNetRoles { get; set; }
        public System.Data.Entity.DbSet<AspNetUser> AspNetUsers { get; set; }
        public System.Data.Entity.DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public System.Data.Entity.DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public System.Data.Entity.DbSet<Banner> Banners { get; set; }
        public System.Data.Entity.DbSet<Card> Cards { get; set; }
        public System.Data.Entity.DbSet<CityTown> CityTowns { get; set; }
        public System.Data.Entity.DbSet<DataSet> DataSets { get; set; }
        public System.Data.Entity.DbSet<DataSetExtension> DataSetExtensions { get; set; }
        public System.Data.Entity.DbSet<DataSetHistory> DataSetHistories { get; set; }
        public System.Data.Entity.DbSet<DataSetType> DataSetTypes { get; set; }
        public System.Data.Entity.DbSet<DataSetUnit> DataSetUnits { get; set; }
        public System.Data.Entity.DbSet<Discuss> Discusses { get; set; }
        public System.Data.Entity.DbSet<DistrictOffice> DistrictOffices { get; set; }
        public System.Data.Entity.DbSet<Document> Documents { get; set; }
        public System.Data.Entity.DbSet<DocumentExt> DocumentExts { get; set; }
        public System.Data.Entity.DbSet<Engineering> Engineerings { get; set; }
        public System.Data.Entity.DbSet<EngineeringLog> EngineeringLogs { get; set; }
        public System.Data.Entity.DbSet<Forum> Fora { get; set; }
        public System.Data.Entity.DbSet<Hyperlink> Hyperlinks { get; set; }
        public System.Data.Entity.DbSet<MdCheck> MdChecks { get; set; }
        public System.Data.Entity.DbSet<MdFillQuest> MdFillQuests { get; set; }
        public System.Data.Entity.DbSet<MdQuestInfo> MdQuestInfoes { get; set; }
        public System.Data.Entity.DbSet<MdQuestion> MdQuestions { get; set; }
        public System.Data.Entity.DbSet<MdQuestionGroup> MdQuestionGroups { get; set; }
        public System.Data.Entity.DbSet<MdQuestNecessaryRel> MdQuestNecessaryRels { get; set; }
        public System.Data.Entity.DbSet<MdQuestSetItem> MdQuestSetItems { get; set; }
        public System.Data.Entity.DbSet<Menu> Menus { get; set; }
        public System.Data.Entity.DbSet<Nlog> Nlogs { get; set; }
        public System.Data.Entity.DbSet<Participation> Participations { get; set; }
        public System.Data.Entity.DbSet<ParticipationActivity> ParticipationActivities { get; set; }
        public System.Data.Entity.DbSet<ParticipationAnonymousClick> ParticipationAnonymousClicks { get; set; }
        public System.Data.Entity.DbSet<ParticipationDiscuss> ParticipationDiscusses { get; set; }
        public System.Data.Entity.DbSet<ParticipationDocument> ParticipationDocuments { get; set; }
        public System.Data.Entity.DbSet<ParticipationDocumentExt> ParticipationDocumentExts { get; set; }
        public System.Data.Entity.DbSet<ParticipationHyperlink> ParticipationHyperlinks { get; set; }
        public System.Data.Entity.DbSet<ParticipationTag> ParticipationTags { get; set; }
        public System.Data.Entity.DbSet<Photo> Photos { get; set; }
        public System.Data.Entity.DbSet<PhotoExt> PhotoExts { get; set; }
        public System.Data.Entity.DbSet<ShowCase> ShowCases { get; set; }
        public System.Data.Entity.DbSet<ShowCaseUrl> ShowCaseUrls { get; set; }
        public System.Data.Entity.DbSet<Tag> Tags { get; set; }
        public System.Data.Entity.DbSet<ViewQuestionExport> ViewQuestionExports { get; set; }
        public System.Data.Entity.DbSet<Vote> Votes { get; set; }
        public System.Data.Entity.DbSet<VoteBasic> VoteBasics { get; set; }
        public System.Data.Entity.DbSet<VoteBasicGroup> VoteBasicGroups { get; set; }
        public System.Data.Entity.DbSet<VoteCheck> VoteChecks { get; set; }
        public System.Data.Entity.DbSet<VoteFillBasic> VoteFillBasics { get; set; }
        public System.Data.Entity.DbSet<VoteFillOption> VoteFillOptions { get; set; }
        public System.Data.Entity.DbSet<VoteOption> VoteOptions { get; set; }
        public System.Data.Entity.DbSet<WaitingMail> WaitingMails { get; set; }
        public System.Data.Entity.DbSet<Youtube> Youtubes { get; set; }

        static OpenGovContext()
        {
            System.Data.Entity.Database.SetInitializer<OpenGovContext>(null);
        }

        public OpenGovContext()
            : base("Name=OpenGovDB")
        {
        }

        public OpenGovContext(string connectionString)
            : base(connectionString)
        {
        }

        public OpenGovContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public OpenGovContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public OpenGovContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ActivityConfiguration());
            modelBuilder.Configurations.Add(new AllowanceConfiguration());
            modelBuilder.Configurations.Add(new AllowanceSourceConfiguration());
            modelBuilder.Configurations.Add(new AnonymousClickConfiguration());
            modelBuilder.Configurations.Add(new AspNetRoleConfiguration());
            modelBuilder.Configurations.Add(new AspNetUserConfiguration());
            modelBuilder.Configurations.Add(new AspNetUserClaimConfiguration());
            modelBuilder.Configurations.Add(new AspNetUserLoginConfiguration());
            modelBuilder.Configurations.Add(new BannerConfiguration());
            modelBuilder.Configurations.Add(new CardConfiguration());
            modelBuilder.Configurations.Add(new CityTownConfiguration());
            modelBuilder.Configurations.Add(new DataSetConfiguration());
            modelBuilder.Configurations.Add(new DataSetExtensionConfiguration());
            modelBuilder.Configurations.Add(new DataSetHistoryConfiguration());
            modelBuilder.Configurations.Add(new DataSetTypeConfiguration());
            modelBuilder.Configurations.Add(new DataSetUnitConfiguration());
            modelBuilder.Configurations.Add(new DiscussConfiguration());
            modelBuilder.Configurations.Add(new DistrictOfficeConfiguration());
            modelBuilder.Configurations.Add(new DocumentConfiguration());
            modelBuilder.Configurations.Add(new DocumentExtConfiguration());
            modelBuilder.Configurations.Add(new EngineeringConfiguration());
            modelBuilder.Configurations.Add(new EngineeringLogConfiguration());
            modelBuilder.Configurations.Add(new ForumConfiguration());
            modelBuilder.Configurations.Add(new HyperlinkConfiguration());
            modelBuilder.Configurations.Add(new MdCheckConfiguration());
            modelBuilder.Configurations.Add(new MdFillQuestConfiguration());
            modelBuilder.Configurations.Add(new MdQuestInfoConfiguration());
            modelBuilder.Configurations.Add(new MdQuestionConfiguration());
            modelBuilder.Configurations.Add(new MdQuestionGroupConfiguration());
            modelBuilder.Configurations.Add(new MdQuestNecessaryRelConfiguration());
            modelBuilder.Configurations.Add(new MdQuestSetItemConfiguration());
            modelBuilder.Configurations.Add(new MenuConfiguration());
            modelBuilder.Configurations.Add(new NlogConfiguration());
            modelBuilder.Configurations.Add(new ParticipationConfiguration());
            modelBuilder.Configurations.Add(new ParticipationActivityConfiguration());
            modelBuilder.Configurations.Add(new ParticipationAnonymousClickConfiguration());
            modelBuilder.Configurations.Add(new ParticipationDiscussConfiguration());
            modelBuilder.Configurations.Add(new ParticipationDocumentConfiguration());
            modelBuilder.Configurations.Add(new ParticipationDocumentExtConfiguration());
            modelBuilder.Configurations.Add(new ParticipationHyperlinkConfiguration());
            modelBuilder.Configurations.Add(new ParticipationTagConfiguration());
            modelBuilder.Configurations.Add(new PhotoConfiguration());
            modelBuilder.Configurations.Add(new PhotoExtConfiguration());
            modelBuilder.Configurations.Add(new ShowCaseConfiguration());
            modelBuilder.Configurations.Add(new ShowCaseUrlConfiguration());
            modelBuilder.Configurations.Add(new TagConfiguration());
            modelBuilder.Configurations.Add(new ViewQuestionExportConfiguration());
            modelBuilder.Configurations.Add(new VoteConfiguration());
            modelBuilder.Configurations.Add(new VoteBasicConfiguration());
            modelBuilder.Configurations.Add(new VoteBasicGroupConfiguration());
            modelBuilder.Configurations.Add(new VoteCheckConfiguration());
            modelBuilder.Configurations.Add(new VoteFillBasicConfiguration());
            modelBuilder.Configurations.Add(new VoteFillOptionConfiguration());
            modelBuilder.Configurations.Add(new VoteOptionConfiguration());
            modelBuilder.Configurations.Add(new WaitingMailConfiguration());
            modelBuilder.Configurations.Add(new YoutubeConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ActivityConfiguration(schema));
            modelBuilder.Configurations.Add(new AllowanceConfiguration(schema));
            modelBuilder.Configurations.Add(new AllowanceSourceConfiguration(schema));
            modelBuilder.Configurations.Add(new AnonymousClickConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetRoleConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetUserConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetUserClaimConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetUserLoginConfiguration(schema));
            modelBuilder.Configurations.Add(new BannerConfiguration(schema));
            modelBuilder.Configurations.Add(new CardConfiguration(schema));
            modelBuilder.Configurations.Add(new CityTownConfiguration(schema));
            modelBuilder.Configurations.Add(new DataSetConfiguration(schema));
            modelBuilder.Configurations.Add(new DataSetExtensionConfiguration(schema));
            modelBuilder.Configurations.Add(new DataSetHistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new DataSetTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new DataSetUnitConfiguration(schema));
            modelBuilder.Configurations.Add(new DiscussConfiguration(schema));
            modelBuilder.Configurations.Add(new DistrictOfficeConfiguration(schema));
            modelBuilder.Configurations.Add(new DocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new DocumentExtConfiguration(schema));
            modelBuilder.Configurations.Add(new EngineeringConfiguration(schema));
            modelBuilder.Configurations.Add(new EngineeringLogConfiguration(schema));
            modelBuilder.Configurations.Add(new ForumConfiguration(schema));
            modelBuilder.Configurations.Add(new HyperlinkConfiguration(schema));
            modelBuilder.Configurations.Add(new MdCheckConfiguration(schema));
            modelBuilder.Configurations.Add(new MdFillQuestConfiguration(schema));
            modelBuilder.Configurations.Add(new MdQuestInfoConfiguration(schema));
            modelBuilder.Configurations.Add(new MdQuestionConfiguration(schema));
            modelBuilder.Configurations.Add(new MdQuestionGroupConfiguration(schema));
            modelBuilder.Configurations.Add(new MdQuestNecessaryRelConfiguration(schema));
            modelBuilder.Configurations.Add(new MdQuestSetItemConfiguration(schema));
            modelBuilder.Configurations.Add(new MenuConfiguration(schema));
            modelBuilder.Configurations.Add(new NlogConfiguration(schema));
            modelBuilder.Configurations.Add(new ParticipationConfiguration(schema));
            modelBuilder.Configurations.Add(new ParticipationActivityConfiguration(schema));
            modelBuilder.Configurations.Add(new ParticipationAnonymousClickConfiguration(schema));
            modelBuilder.Configurations.Add(new ParticipationDiscussConfiguration(schema));
            modelBuilder.Configurations.Add(new ParticipationDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new ParticipationDocumentExtConfiguration(schema));
            modelBuilder.Configurations.Add(new ParticipationHyperlinkConfiguration(schema));
            modelBuilder.Configurations.Add(new ParticipationTagConfiguration(schema));
            modelBuilder.Configurations.Add(new PhotoConfiguration(schema));
            modelBuilder.Configurations.Add(new PhotoExtConfiguration(schema));
            modelBuilder.Configurations.Add(new ShowCaseConfiguration(schema));
            modelBuilder.Configurations.Add(new ShowCaseUrlConfiguration(schema));
            modelBuilder.Configurations.Add(new TagConfiguration(schema));
            modelBuilder.Configurations.Add(new ViewQuestionExportConfiguration(schema));
            modelBuilder.Configurations.Add(new VoteConfiguration(schema));
            modelBuilder.Configurations.Add(new VoteBasicConfiguration(schema));
            modelBuilder.Configurations.Add(new VoteBasicGroupConfiguration(schema));
            modelBuilder.Configurations.Add(new VoteCheckConfiguration(schema));
            modelBuilder.Configurations.Add(new VoteFillBasicConfiguration(schema));
            modelBuilder.Configurations.Add(new VoteFillOptionConfiguration(schema));
            modelBuilder.Configurations.Add(new VoteOptionConfiguration(schema));
            modelBuilder.Configurations.Add(new WaitingMailConfiguration(schema));
            modelBuilder.Configurations.Add(new YoutubeConfiguration(schema));
            return modelBuilder;
        }
    }
}
// </auto-generated>
