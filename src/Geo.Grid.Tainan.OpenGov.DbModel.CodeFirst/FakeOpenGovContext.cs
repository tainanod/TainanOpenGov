// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Geo.Grid.Tainan.OpenGov.DbModel.CodeFirst
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public class FakeOpenGovContext : IOpenGovContext
    {
        public System.Data.Entity.DbSet<Activity> Activities { get; set; }
        public System.Data.Entity.DbSet<Allowance> Allowances { get; set; }
        public System.Data.Entity.DbSet<AllowanceSource> AllowanceSources { get; set; }
        public System.Data.Entity.DbSet<AnonymousClick> AnonymousClicks { get; set; }
        public System.Data.Entity.DbSet<AspNetRole> AspNetRoles { get; set; }
        public System.Data.Entity.DbSet<AspNetUser> AspNetUsers { get; set; }
        public System.Data.Entity.DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public System.Data.Entity.DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public System.Data.Entity.DbSet<Banner> Banners { get; set; }
        public System.Data.Entity.DbSet<Card> Cards { get; set; }
        public System.Data.Entity.DbSet<CityTown> CityTowns { get; set; }
        public System.Data.Entity.DbSet<DataSet> DataSets { get; set; }
        public System.Data.Entity.DbSet<DataSetExtension> DataSetExtensions { get; set; }
        public System.Data.Entity.DbSet<DataSetHistory> DataSetHistories { get; set; }
        public System.Data.Entity.DbSet<DataSetType> DataSetTypes { get; set; }
        public System.Data.Entity.DbSet<DataSetUnit> DataSetUnits { get; set; }
        public System.Data.Entity.DbSet<Discuss> Discusses { get; set; }
        public System.Data.Entity.DbSet<DistrictOffice> DistrictOffices { get; set; }
        public System.Data.Entity.DbSet<Document> Documents { get; set; }
        public System.Data.Entity.DbSet<DocumentExt> DocumentExts { get; set; }
        public System.Data.Entity.DbSet<Engineering> Engineerings { get; set; }
        public System.Data.Entity.DbSet<EngineeringLog> EngineeringLogs { get; set; }
        public System.Data.Entity.DbSet<Forum> Fora { get; set; }
        public System.Data.Entity.DbSet<Hyperlink> Hyperlinks { get; set; }
        public System.Data.Entity.DbSet<MdCheck> MdChecks { get; set; }
        public System.Data.Entity.DbSet<MdFillQuest> MdFillQuests { get; set; }
        public System.Data.Entity.DbSet<MdQuestInfo> MdQuestInfoes { get; set; }
        public System.Data.Entity.DbSet<MdQuestion> MdQuestions { get; set; }
        public System.Data.Entity.DbSet<MdQuestionGroup> MdQuestionGroups { get; set; }
        public System.Data.Entity.DbSet<MdQuestNecessaryRel> MdQuestNecessaryRels { get; set; }
        public System.Data.Entity.DbSet<MdQuestSetItem> MdQuestSetItems { get; set; }
        public System.Data.Entity.DbSet<Menu> Menus { get; set; }
        public System.Data.Entity.DbSet<Nlog> Nlogs { get; set; }
        public System.Data.Entity.DbSet<Participation> Participations { get; set; }
        public System.Data.Entity.DbSet<ParticipationActivity> ParticipationActivities { get; set; }
        public System.Data.Entity.DbSet<ParticipationAnonymousClick> ParticipationAnonymousClicks { get; set; }
        public System.Data.Entity.DbSet<ParticipationDiscuss> ParticipationDiscusses { get; set; }
        public System.Data.Entity.DbSet<ParticipationDocument> ParticipationDocuments { get; set; }
        public System.Data.Entity.DbSet<ParticipationDocumentExt> ParticipationDocumentExts { get; set; }
        public System.Data.Entity.DbSet<ParticipationHyperlink> ParticipationHyperlinks { get; set; }
        public System.Data.Entity.DbSet<ParticipationTag> ParticipationTags { get; set; }
        public System.Data.Entity.DbSet<Photo> Photos { get; set; }
        public System.Data.Entity.DbSet<PhotoExt> PhotoExts { get; set; }
        public System.Data.Entity.DbSet<ShowCase> ShowCases { get; set; }
        public System.Data.Entity.DbSet<ShowCaseUrl> ShowCaseUrls { get; set; }
        public System.Data.Entity.DbSet<Tag> Tags { get; set; }
        public System.Data.Entity.DbSet<ViewQuestionExport> ViewQuestionExports { get; set; }
        public System.Data.Entity.DbSet<Vote> Votes { get; set; }
        public System.Data.Entity.DbSet<VoteBasic> VoteBasics { get; set; }
        public System.Data.Entity.DbSet<VoteBasicGroup> VoteBasicGroups { get; set; }
        public System.Data.Entity.DbSet<VoteCheck> VoteChecks { get; set; }
        public System.Data.Entity.DbSet<VoteFillBasic> VoteFillBasics { get; set; }
        public System.Data.Entity.DbSet<VoteFillOption> VoteFillOptions { get; set; }
        public System.Data.Entity.DbSet<VoteOption> VoteOptions { get; set; }
        public System.Data.Entity.DbSet<WaitingMail> WaitingMails { get; set; }
        public System.Data.Entity.DbSet<Youtube> Youtubes { get; set; }

        public FakeOpenGovContext()
        {
            Activities = new FakeDbSet<Activity>("ActivityId");
            Allowances = new FakeDbSet<Allowance>("AllowanceId");
            AllowanceSources = new FakeDbSet<AllowanceSource>("SourceId");
            AnonymousClicks = new FakeDbSet<AnonymousClick>("AnonymousId", "ClickId", "ClickType");
            AspNetRoles = new FakeDbSet<AspNetRole>("Id");
            AspNetUsers = new FakeDbSet<AspNetUser>("Id");
            AspNetUserClaims = new FakeDbSet<AspNetUserClaim>("Id");
            AspNetUserLogins = new FakeDbSet<AspNetUserLogin>("LoginProvider", "ProviderKey", "UserId");
            Banners = new FakeDbSet<Banner>("BannerId");
            Cards = new FakeDbSet<Card>("CardId");
            CityTowns = new FakeDbSet<CityTown>("CityTownId");
            DataSets = new FakeDbSet<DataSet>("SetId");
            DataSetExtensions = new FakeDbSet<DataSetExtension>("ExtensionId");
            DataSetHistories = new FakeDbSet<DataSetHistory>("HistoryId");
            DataSetTypes = new FakeDbSet<DataSetType>("TypeId");
            DataSetUnits = new FakeDbSet<DataSetUnit>("UnitId");
            Discusses = new FakeDbSet<Discuss>("DiscussId");
            DistrictOffices = new FakeDbSet<DistrictOffice>("OfficeId");
            Documents = new FakeDbSet<Document>("DocumentId");
            DocumentExts = new FakeDbSet<DocumentExt>("DocumentId");
            Engineerings = new FakeDbSet<Engineering>("GovernmentAenciesCode", "Code");
            EngineeringLogs = new FakeDbSet<EngineeringLog>("LogId");
            Fora = new FakeDbSet<Forum>("ForumId");
            Hyperlinks = new FakeDbSet<Hyperlink>("HyperlinkId");
            MdChecks = new FakeDbSet<MdCheck>("InfoId", "UserEmail");
            MdFillQuests = new FakeDbSet<MdFillQuest>("FillId");
            MdQuestInfoes = new FakeDbSet<MdQuestInfo>("InfoId");
            MdQuestions = new FakeDbSet<MdQuestion>("QstId");
            MdQuestionGroups = new FakeDbSet<MdQuestionGroup>("GroupId");
            MdQuestNecessaryRels = new FakeDbSet<MdQuestNecessaryRel>("SetId");
            MdQuestSetItems = new FakeDbSet<MdQuestSetItem>("SetId");
            Menus = new FakeDbSet<Menu>("MenuId");
            Nlogs = new FakeDbSet<Nlog>("Id");
            Participations = new FakeDbSet<Participation>("ParticipationId");
            ParticipationActivities = new FakeDbSet<ParticipationActivity>("ActivityId");
            ParticipationAnonymousClicks = new FakeDbSet<ParticipationAnonymousClick>("AnonymousId", "ClickId", "ClickType");
            ParticipationDiscusses = new FakeDbSet<ParticipationDiscuss>("DiscussId");
            ParticipationDocuments = new FakeDbSet<ParticipationDocument>("DocumentId");
            ParticipationDocumentExts = new FakeDbSet<ParticipationDocumentExt>("DocumentId");
            ParticipationHyperlinks = new FakeDbSet<ParticipationHyperlink>("HyperlinkId");
            ParticipationTags = new FakeDbSet<ParticipationTag>("TagId");
            Photos = new FakeDbSet<Photo>("PhotoId");
            PhotoExts = new FakeDbSet<PhotoExt>("PhotoId");
            ShowCases = new FakeDbSet<ShowCase>("CaseId");
            ShowCaseUrls = new FakeDbSet<ShowCaseUrl>("UrlId");
            Tags = new FakeDbSet<Tag>("TagId");
            ViewQuestionExports = new FakeDbSet<ViewQuestionExport>("InfoId", "MdFillUserId", "UserName", "QstId", "SetId", "FillScore", "EditDate");
            Votes = new FakeDbSet<Vote>("VoteId");
            VoteBasics = new FakeDbSet<VoteBasic>("BasicId");
            VoteBasicGroups = new FakeDbSet<VoteBasicGroup>("GroupId");
            VoteChecks = new FakeDbSet<VoteCheck>("VoteId", "UserEmail");
            VoteFillBasics = new FakeDbSet<VoteFillBasic>("UserId", "BasicId", "VoteId");
            VoteFillOptions = new FakeDbSet<VoteFillOption>("UserId", "OptionId");
            VoteOptions = new FakeDbSet<VoteOption>("OptionId");
            WaitingMails = new FakeDbSet<WaitingMail>("MailSeq");
            Youtubes = new FakeDbSet<Youtube>("YoutubeId");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }
}
// </auto-generated>
